<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="aion boot"
         xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="parent.mod" value="../mod"/>
    <property name="dir.lib" value="./lib"/>
    <property name="dir.mod" value="./mod"/>
    <property name="dir.pack" value="./pack"/>
    <property name="dir.main" value="./src/main"/>
    <property name="src.main" value="${dir.main}/java"/>
    <property name="res.main" value="${dir.main}/resources"/>
    <property name="dir.test" value="./src/test"/>
    <property name="src.test" value="${dir.test}/java"/>
    <property name="res.test" value="${dir.test}/resources"/>
    <property name="out.main" value="./build/main"/>
    <property name="out.test" value="./build/test"/>
    <property name="test.report.dir" value="./build/report"/>

    <path id="classpath.dependency">
        <pathelement location="${dir.mod}/modAionBase.jar"/>
    </path>

    <path id="classpath.test">
    </path>


    <target name="clean">
        <delete dir="${out.main}" includeEmptyDirs="true" includes="**/*/"/>
        <delete dir="${out.test}" includeEmptyDirs="true" includes="**/*/"/>
        <delete dir="${test.report.dir}"/>
        <delete dir="${dir.mod}/updated/"/>
    </target>

    <target name="test_build" depends="build_standalone">
        <mkdir dir="${out.test}"/>
        <javac
                debug="on"
                debuglevel="source,lines,vars"
                includeantruntime="false"
                release="9"
                srcdir="${src.test}"
                destdir="${out.test}"
                includes="**/*Test.java"
        >
            <classpath>
                <path refid="classpath.test"/>
                <path refid="classpath.dependency"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="test_build">
        <mkdir dir="${test.report.dir}"/>
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <path refid="classpath.dependency"/>
                <pathelement location="${out.test}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${test.report.dir}">
                <fileset dir="${src.test}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="build_submodule">
        <mkdir dir="${out.main}"/>
        <mkdir dir="${dir.pack}"/>
        <condition property="parent.exists">
            <available file="${parent.mod}" type="dir"/>
        </condition>
        <!--<fail unless:set="parent.exists">Can't build module in standalone mode</fail>-->

        <mkdir dir="${dir.mod}/updated"/>
        <copy todir="${dir.mod}/updated">
            <fileset dir="${parent.mod}" includes="mod*.jar" />
        </copy>
        <javac
                debug="${compile.debug}"
                debuglevel="source,lines,vars"
                includeantruntime="false"
                release="9"
                srcdir="./"
                destdir="${out.main}"
                excludes="src/main/java/org/aion/connector/api/**/*.java"
                includes="src/main/java/**/*.java,module-info.java"
        >
            <modulepath>
                <fileset dir="${dir.lib}" excludes="*AionApi*.jar,libRlp.jar" includes="*.jar"/>
                <fileset dir="${dir.mod}" includes="*updated/*.jar"/>
            </modulepath>
        </javac>
        <copy includeemptydirs="false" todir="${out.main}">
            <fileset dir="${res.main}" id="**"/>
        </copy>
        <jar
                destfile="modWallet.jar"
                filesetmanifest="mergewithoutmain"
                basedir="${out.main}"
        />
        <move includeemptydirs="false" todir="${dir.pack}">
            <file file="modWallet.jar"/>
        </move>
        <delete dir="${dir.mod}/updated"/>
    </target>

    <target name="build_standalone">
        <mkdir dir="${out.main}"/>
        <mkdir dir="${dir.pack}"/>
        <condition property="parent.exists">
            <available file="${parent.mod}" type="dir"/>
        </condition>

        <javac
                debug="${compile.debug}"
                debuglevel="source,lines,vars"
                includeantruntime="false"
                release="9"
                srcdir="./"
                destdir="${out.main}"
                excludes="src/main/java/org/aion/connector/core/**/*.java"
                includes="src/main/java/**/*.java"
        >
            <modulepath>
                <fileset dir="${dir.lib}" includes="*.jar"/>
                <fileset dir="${dir.mod}" includes="*.jar"/>
            </modulepath>
        </javac>
        <copy includeemptydirs="false" todir="${out.main}">
            <fileset dir="${res.main}" id="**"/>
        </copy>
        <jar
                destfile="aion_ui.jar"
                filesetmanifest="mergewithoutmain"
                basedir="${out.main}"
        />
        <move includeemptydirs="false" todir="${dir.pack}">
            <file file="aion_ui.jar"/>
        </move>
    </target>

</project>
